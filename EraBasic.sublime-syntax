%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html

name: EraBasic

file_extensions:
  - erb
  - erh

scope: source.erabasic

variables:

  # digit separators
  digit_separators: '(?:(?:_+[0-9]+)*)'

  # integers
  hex_numeral: '(0[xX])_*\h+(?:_+\h+)*'
  binary_numeral: '(0[bB])_*[01]+(?:_+[01]+)*'
  decimal_numeral: '(0|[1-9][0-9]*{{digit_separators}})((?i:ul|lu|u|l)?)'

  # floating point numbers
  exponent: '[eE][+\-]?[0-9]+{{digit_separators}}'
  floating_point: '([0-9]+{{digit_separators}}(?={{floating_point_suffix}}|[.Ee])(?:\.[0-9]+{{digit_separators}})?(?:{{exponent}})?)({{floating_point_suffix}}?)'
  floating_point_suffix: '[fFdDmM]'

  # characters
  unicode_char: '(?:\\u\h{4}|\\U\h{8})'
  escaped_char: '(?:\\[abfnrtv"''\\]|{{unicode_char}}|\\x[0-9a-fA-F]{1,4}|\\[0-9]{1,3})'

  start_char: '(?:{{unicode_char}}|[_\p{L}])'
  other_char: '(?:{{unicode_char}}|[_0-9\p{L}])'
  name_normal: '\b(?:{{start_char}}{{other_char}}*)\b'

# ---------------------------------------------
# 常量, 变量

  kw_user_const: '(?:\s)'

  kw_const: '(?:{{kw_user_const}}|ABLUP|AFTERTRAIN|BACK|CENTER|FIRST|FORWARD|LEFT|RIGHT|SHOP|TITLE|TRAIN|TURNEND)'

  kw___var__: '(?:__(?:FILE|FUNCTION|INT_MAX|INT_MIN|LINE)__)'
  kw_BASE: '(?:(?:DOWN|LOSE|MAX)?BASE)'
  kw_CDFLAG: '(?:CDFLAG)'
  kw_CDFLAGNAME: '(?:{{kw_CDFLAG}}(?:NAME1|NAME2))'
  kw_GAMEBASE: '(?:GAMEBASE_(?:ALLOWVERSION|AUTHOR|DEFAULTCHARA|GAMECODE|INFO|NOITEM|TITLE|VERSION|YEAR))'

  kw_var_int1: '(?:ARG|GLOBAL|LOCAL|RESULT)'
  kw_var_int2: '(?:ABL|BASE|CFLAG|CSTR|EQUIP|EX|EXP|FLAG|GLOBAL|ITEM|JUEL|MARK|MASTER|PALAM|SOURCE|STAIN|TALENT|TCVAR|TEQUIP|TFLAG)'

  kw_var_str2: '(?:SAVESTR|STR|TSTR)'

  kw_var__S: '(?:{{kw_var_int1}}(?:S))'
  kw_var__NAME: '(?:(?:{{kw_var_int2}}|{{kw_var_str2}})(?:NAME))'

  kw_var_string: '(?:{{kw_var__S}}|{{kw_var__NAME}}|{{kw_var_str2}}|{{kw_CDFLAGNAME}}|CALLNAME|DRAWLINESTR|GLOBALSNAME|LASTLOAD_TEXT|MONEYLABEL|NAME|NICKNAME|SAVEDATA_TEXT|TRAINNAME|WINDOW_TITLE)'

  kw_variable: '(?:{{kw___var__}}|{{kw_var_int1}}|{{kw_var_int2}}|{{kw_var_string}}|{{kw_BASE}}|{{kw_CDFLAG}}|{{kw_GAMEBASE}}|ASSI|ASSIPLAY|BOUGHT|CDOWN|CHARANUM|COUNT|CUP|DA|DAY|DB|DC|DD|DE|DITEMTYPE|DOWN|EJAC|EXPLV|GOTJUEL|ISASSI|ISTIMEOUT|ITEMPRICE|ITEMSALES|LASTLOAD_NO|LASTLOAD_VERSION|LINECOUNT|MONEY|NEXTCOM|NO|NOITEM|NOWEX|PBAND|PLAYER|PREVCOM|RAND|RANDDATA|PALAMLV|RELATION|SELECTCOM|TA|TARGET|TB|TIME|UP)'

# ---------------------------------------------
# 声明

  kw_DIM: '(?:DIM(?:S)?)'
  kw_FUNCTION: '(?:FUNCTION(?:S)?)'
  kw_LOCALSIZE: '(?:LOCAL(?:S)?SIZE)'

  kw_declare: '(?:{{kw_FUNCTION}}|{{kw_LOCALSIZE}}|ONLY|SINGLE|PRI|LATER)'
  kw_declare_type: '(?:{{kw_DIM}}|DEFINE)'
  kw_declare_type_DIM: '(?:CHARADATA|CONST|DYNAMIC|GLOBAL|REF|SAVEDATA|STATIC)'

# ---------------------------------------------
# 方法

  kw_CSV: '(?:CSV(?:ABL|BASE|CALLNAME|CFLAG|CSTR|EQUIP|EXP|JUEL|MARK|MASTERNAME|NAME|NICKNAME|RELATION|TALENT))'

  kw_PRINT: '(?:PRINT(?:K|D)?(?:L|W)?)'
  kw_PRINTV: '(?:PRINTV(?:K|D)?(?:L|W)?)'
  kw_PRINTS: '(?:PRINTS(?:K|D)?(?:L|W)?)'
  kw_PRINTFORM: '(?:PRINT(?:FORM|FORMS)(?:K|D)?(?:L|W)?)'

  kw_PRINTC: '(?:PRINT(?:C|LC)(?:K|D)?)'
  kw_PRINTFORMC: '(?:PRINTFORM(?:C|LC)(?:K|D)?)'

  kw_PRINTPLAIN: '(?:PRINTPLAIN)'
  kw_PRINTPLAINFORM: '(?:PRINTPLAINFORM)'

  kw_PRINTSINGLE: '(?:PRINTSINGLE(?:K|D)?)'
  kw_PRINTSINGLEV: '(?:PRINTSINGLEV(?:K|D)?)'
  kw_PRINTSINGLES: '(?:PRINTSINGLES(?:K|D)?)'
  kw_PRINTSINGLEFORM: '(?:PRINTSINGLE(?:FORM|FORMS)(?:K|D)?)'

  kw_PRINTBUTTON: '(?:PRINTBUTTON(?:C|LC)?)'

  kw_PRINTDATA: '(?:PRINTDATA(?:K|D)?(?:L|W)?)'

  kw_DEBUGPRINT: '(?:DEBUGPRINT(?:L)?)'
  kw_DEBUGPRINTFORM: '(?:DEBUGPRINTFORM(?:L)?)'

  kw_STRLEN: '(?:STRLEN(?:U)?)'
  kw_STRLENS: '(?:STRLENS(?:U)?)'
  kw_STRLENFORM: '(?:STRLENFORM(?:U)?)'

  kw_STRFIND: '(?:STRFIND(?:U)?)'

  kw_SUBSTRING: '(?:SUBSTRING(?:U)?)'

  kw_SETCOLORBYNAME: '(?:SET(?:BG)?COLORBYNAME)'

  kw_control_CSV: '(?:{{kw_CSV}})'

  kw_control_PRINT: '(?:{{kw_PRINT}}|{{kw_PRINTC}}|{{kw_PRINTPLAIN}}|{{kw_PRINTSINGLE}})'
  kw_control_PRINT_V: '(?:{{kw_PRINTV}}|{{kw_PRINTSINGLEV}})'
  kw_control_PRINT_S: '(?:{{kw_PRINTS}}|{{kw_PRINTSINGLES}})'
  kw_control_PRINT_FORM: '(?:{{kw_PRINTFORM}}|{{kw_PRINTFORMC}}|{{kw_PRINTPLAINFORM}}|{{kw_PRINTSINGLEFORM}})'

  kw_control_PRINTBUTTON: '(?:{{kw_PRINTBUTTON}})'

  kw_control_PRINTDATA: '(?:{{kw_PRINTDATA}}|STRDATA|ENDDATA)'
  kw_control_DATA: '(?:{{kw_DATA}})'
  kw_control_DATAFORM: '(?:{{kw_DATAFORM}})'
  kw_control_DATALIST: '(?:DATALIST|ENDLIST)'

  kw_control_DEBUGPRINT: '(?:{{kw_DEBUGPRINT}})'
  kw_control_DEBUGPRINTFORM: '(?:{{kw_DEBUGPRINTFORM}})'

  kw_control_STRLEN: '(?:{{kw_STRLEN}})'
  kw_control_STRLENS: '(?:{{kw_STRLENS}})'
  kw_control_STRLENFORM: '(?:{{kw_STRLENFORM}})'

  kw_control_STRFIND: '(?:{{kw_STRFIND}})'

  kw_control_SUBSTRING: '(?:{{kw_SUBSTRING}})'

  kw_control_plain: '(?:{{kw_SETCOLORBYNAME}}|CUSTOMDRAWLINE)'
  kw_control_v: '(?:\s)'
  kw_control_s: '(?:{{kw_control_STRFIND}})'
  kw_control_form: '(?:DRAWLINEFORM|ENCODETOUNI|REUSELASTLINE)'

  kw_control_func: '(?:{{kw_control_CSV}}|{{kw_control_PRINT}}|{{kw_control_PRINT_V}}|{{kw_control_PRINT_S}}|{{kw_control_PRINT_FORM}}|{{kw_control_PRINTBUTTON}}|{{kw_control_PRINTDATA}}|{{kw_control_DATA}}|{{kw_control_DATAFORM}}|{{kw_control_DATALIST}}|{{kw_control_DEBUGPRINT}}|{{kw_control_DEBUGPRINTFORM}}|{{kw_control_STRLEN}}|{{kw_control_STRLENS}}|{{kw_control_STRLENFORM}}|{{kw_control_SUBSTRING}}|{{kw_control_plain}}|{{kw_control_v}}|{{kw_control_s}}|{{kw_control_form}})'

# ---------------------------------------------
# 控制语句

  kw_DATA: 'DATA'
  kw_DATAFORM: 'DATAFORM'
  kw_END: '(?:END(?:CATCH|DATA|FUNC|IF|LIST|NOSKIP|SELECT))'
  kw_IF: '(?:IF(?:_DEBUG|_NDEBUG)?)'

  kw_CALL: 'CALL'
  kw_CALLF: 'CALLF'
  kw_JUMP: 'JUMP'
  kw_GOTO: 'GOTO'

  kw_CALLFORM: 'CALLFORM'
  kw_CALLFORMF: 'CALLFORMF'
  kw_JUMPFORM: 'JUMPFORM'
  kw_GOTOFORM: 'GOTOFORM'

  kw_C_J_G_PLAIN: '(?:{{kw_CALL}}|{{kw_JUMP}}|{{kw_GOTO}})'
  kw_CF_J_G_PLAIN: '(?:{{kw_CALL}}|{{kw_CALLF}}|{{kw_JUMP}}|{{kw_GOTO}})'

  kw_C_J_G_FORM: '(?:{{kw_CALLFORM}}|{{kw_JUMPFORM}}|{{kw_GOTOFORM}})'
  kw_CF_J_G_FORM: '(?:{{kw_CALLFORM}}|{{kw_CALLFORMF}}|{{kw_JUMPFORM}}|{{kw_GOTOFORM}})'

  kw_TRYC_PLAIN: '(?:TRYC{{kw_C_J_G_PLAIN}})'
  kw_TRYC_FORM: '(?:TRYC{{kw_C_J_G_FORM}})'

  kw_TRY_PLAIN: '(?:TRY{{kw_C_J_G_PLAIN}})'
  kw_TRY_FORM: '(?:TRY{{kw_C_J_G_FORM}})'

  kw_func_CALL: '(?:{{kw_CF_J_G_PLAIN}}|{{kw_TRY_PLAIN}})'
  kw_func_CALL_FORM: '(?:{{kw_CF_J_G_FORM}}|{{kw_TRY_FORM}})'

  kw_TRY_LIST: '(?:TRY{{kw_C_J_G_PLAIN}}LIST)'

  kw_RETURN: '(?:RETURN(?:F)?)'
  kw_RETURN_FORM: '(?:RETURNFORM(?:F)?)'

# ---------------------------------------------

  kw_control_CALL: '(?:{{kw_func_CALL}})'
  kw_control_CALL_FORM: '(?:{{kw_func_CALL_FORM}})'

  kw_control_RETURN: '(?:{{kw_RETURN}})'
  kw_control_RETURN_FORM: '(?:{{kw_RETURN_FORM}})'
  kw_control_RESTART: '(?:RESTART)'
  kw_control_BEGIN: '(?:BEGIN)'

  kw_control_SIF: '(?:SIF)'
  kw_control_IF: '(?:{{kw_IF}}|ELSE|ELSEIF|ENDIF)'
  kw_control_SELECTCASE: '(?:SELECTCASE|CASE|CASEELSE|ENDSELECT)'
  kw_control_NOSKIP: '(?:NOSKIP|ENDNOSKIP)'
  kw_control_SKIPSTART: '(?:SKIPSTART|SKIPEND)'

  kw_control_FOR: '(?:FOR|NEXT)'
  kw_control_WHILE: '(?:WHILE|WEND)'
  kw_control_DO: '(?:DO|LOOP)'
  kw_control_REPEAT: '(?:REPEAT|REND)'
  kw_control_CONTINUE: '(?:CONTINUE)'
  kw_control_BREAK: '(?:BREAK)'

  kw_control_TRYC: '(?:{{kw_TRYC_PLAIN}})'
  kw_control_TRYC_FORM: '(?:{{kw_TRYC_FORM}})'
  kw_control_TRYC_ENDCATCH: '(?:CATCH|ENDCATCH)'

  kw_control_TRY_LIST: '(?:{{kw_TRY_LIST}}|FUNC|ENDFUNC)'

  kw_control_THROW: '(?:THROW)'

  kw_control_flow: '(?:{{kw_control_CALL}}|{{kw_control_CALL_FORM}}|{{kw_control_RETURN}}|{{kw_control_RETURN_FORM}}|{{kw_control_RESTART}}|{{kw_control_BEGIN}}|{{kw_control_SIF}}|{{kw_control_IF}}|{{kw_control_SELECTCASE}}|{{kw_control_NOSKIP}}|{{kw_control_SKIPSTART}}|{{kw_control_FOR}}|{{kw_control_WHILE}}|{{kw_control_DO}}|{{kw_control_REPEAT}}|{{kw_control_CONTINUE}}|{{kw_control_BREAK}}|{{kw_control_TRYC}}|{{kw_control_TRYC_FORM}}|{{kw_control_TRYC_ENDCATCH}}|{{kw_control_TRY_LIST}}|{{kw_control_THROW}})'

# ---------------------------------------------

  kw_builtin_control: '(?:{{kw_control_func}}|{{kw_control_flow}}|ABS|ADDCHARA|ADDCOPYCHARA|ADDDEFCHARA|ADDVOIDCHARA|ALIGNMENT|ALLSAMES|ARRAYCOPY|ARRAYMSORT|ARRAYREMOVE|ARRAYSHIFT|ARRAYSORT|ASSERT|AWAIT|BARSTR|BEGIN|CALLEVENT|CALLTRAIN|CBGCLEAR|CBGCLEARBUTTON|CBGREMOVEBMAP|CBGREMOVERANGE|CBGSETBMAPG|CBGSETBUTTONSPRITE|CBGSETG|CBGSETSPRITE|CBRT|CHARATU|CHKCHARADATA|CHKDATA|CHKFONT|CLEARBIT|CLEARLINE|CLEARTEXTBOX|CLIENTHEIGHT|CLIENTWIDTH|CMATCH|COLOR_FROMNAME|COLOR_FROMRGB|CONVERT|COPYCHARA|CUPCHECK|CURRENTALIGN|CURRENTREDRAW|CVARSET|DEBUGCLEAR|DELALLCHARA|DELCHARA|DELDATA|DOTRAIN|DRAWLINE|DUMPRAND|ESCAPE|EXISTCSV|EXPONENT|FIND_CHARADATA|FINDCHARA|FINDELEMENT|FINDLASTCHARA|FINDLASTELEMENT|FONTBOLD|FONTITALIC|FONTREGULAR|FONTSTYLE|FORCEKANA|FORCEWAIT|GCLEAR|GCREATE|GCREATED|GCREATEFROMFILE|GDISPOSE|GDRAWG|GDRAWGWITHMASK|GDRAWSPRITE|GETBGCOLOR|GETBIT|GETCHARA|GETCOLOR|GETCONFIG|GETCONFIGS|GETDEFBGCOLOR|GETDEFCOLOR|GETEXPLV|GETFOCUSCOLOR|GETFONT|GETKEY|GETKEYTRIGGERED|GETLINESTR|GETMILLISECOND|GETNUM|GETPALAMLV|GETSECOND|GETSPCHARA|GETSTYLE|GETTIME|GETTIMES|GFILLRECTANGLE|GGETCOLOR|GHEIGHT|GLOAD|GROUPMATCH|GSAVE|GSETBRUSH|GSETCOLOR|GSETFONT|GSETPEN|GWIDTH|HTML_ESCAPE|HTML_GETPRINTEDSTR|HTML_POPPRINTINGSTR|HTML_PRINT|HTML_TAGSPLIT|HTML_TOPLAINTEXT|INITRAND|INPUT|INPUTMOUSEKEY|INPUTS|INRANGE|INRANGEARRAY|INRANGECARRAY|INVERTBIT|ISACTIVE|ISNUMERIC|ISSKIP|LIMIT|LINEISEMPTY|LOADCHARA|LOADDATA|LOADGAME|LOADGLOBAL|LOADTEXT|LOG|LOG10|MATCH|MAX|MAXARRAY|MAXCARRAY|MESSKIP|MIN|MINARRAY|MINCARRAY|MONEYSTR|MOUSESKIP|MOUSEX|MOUSEY|NOSAMES|ONEINPUT|ONEINPUTS|OUTPUTLOG|PICKUPCHARA|POWER|PRINT_IMG|PRINT_RECT|PRINT_SPACE|PRINTCLENGTH|PRINTCPERLINE|RAND|RANDOMIZE|REDRAW|REPLACE|RESET_STAIN|RESETBGCOLOR|RESETCOLOR|RESETDATA|RESETGLOBAL|SAVECHARA|SAVEDATA|SAVEGAME|SAVEGLOBAL|SAVENOS|SAVETEXT|SETANIMETIMER|SETBGCOLOR|SETBGCOLORBYNAME|SETBIT|SETCOLOR|SETCOLORBYNAME|SETFONT|SIGN|SKIPDISP|SORTCHARA|SPLIT|SPRITEANIMEADDFRAME|SPRITEANIMECREATE|SPRITECREATE|SPRITECREATED|SPRITEDISPOSE|SPRITEGETCOLOR|SPRITEHEIGHT|SPRITEMOVE|SPRITEPOSX|SPRITEPOSY|SPRITESETPOS|SPRITEWIDTH|SQRT|STOPCALLTRAIN|STRCOUNT|STRFORM|SUMARRAY|SUMCARRAY|SWAP|SWAPCHARA|TIMES|TINPUT|TINPUTS|TOFULL|TOHALF|TOINT|TOLOWER|TONEINPUT|TONEINPUTS|TOOLTIP_SETCOLOR|TOOLTIP_SETDELAY|TOOLTIP_SETDURATION|TOSTR|TOUPPER|TWAIT|UNICODE|VARSET|VARSIZE|WAIT|WAITANYKEY)'

# ---------------------------------------------

contexts:
  main:
    - include: line_comment

    - include: line_end

    - include: declare

    - include: builtin

    - include: methods

    - include: literals

    - include: variables

    - include: separator

# ---------------------------------------------
# 行注释
# 以 ; 作为开头，直至行结尾的注释语句

  line_comment:
    - match: ';'
      scope: punctuation.definition.comment.erabasic
      push:
        - meta_scope: comment.line.erabasic
        - include: line_end

# ---------------------------------------------
# 声明 (函数, 变量, 标签)

  declare:

    # 以 @ 开头的函数定义
    - match: '^\s*(@)\s*'
      captures:
        1: storage.modifier.erabasic
      push: method_declare

    # 以 # 开头的变量声明
    - match: '^\s*(#)\s*'
      captures:
        1: support.type.erabasic
      push:
        - match: '(?i)\b(?:{{kw_declare}}|{{kw_declare_type}}|{{kw_declare_type_DIM}})\b'
          scope: support.type.erabasic
        - include: line_code

    # 以 $ 开头的GOTO标签
    - match: '^\s*(\$)\s*'
      captures:
        1: storage.modifier.erabasic
      push:
        - include: line_end
        - match: '{{name_normal}}'
          scope: entity.name.function.erabasic

  method_declare:
    - include: line_end
    - match: '(?={{name_normal}})'
      push:
        - include: line_end
        - match: '{{name_normal}}'
          scope: meta.function.erabasic entity.name.function.erabasic
        - match: '(?=,)'
          push: line_code
        - include: line_method_arguments

# ---------------------------------------------
# 控制语句
# 比如IF, ELSE, FOR, WHILE等

  builtin:

    - match: '(?i)^\s*\b{{kw_control_PRINT}}\b'
      scope: keyword.control.print.erabasic
      push: line_func_plain

    - match: '(?i)^\s*\b{{kw_control_PRINT_V}}\b'
      scope: keyword.control.print.v.erabasic
      push: line_func_v

    - match: '(?i)^\s*\b{{kw_control_PRINT_S}}\b'
      scope: keyword.control.print.s.erabasic
      push: line_func_s

    - match: '(?i)^\s*\b{{kw_control_PRINT_FORM}}\b'
      scope: keyword.control.print.form.erabasic
      push: line_func_form_string

    - match: '(?i)^\s*\b{{kw_control_PRINTBUTTON}}\b'
      scope: keyword.control.print.button.erabasic

    - match: '(?i)^\s*\b{{kw_control_PRINTDATA}}\b'
      scope: keyword.control.printdata.erabasic

    - match: '(?i)^\s*\b{{kw_control_DATA}}\b'
      scope: keyword.control.printdata.data.erabasic
      push: line_func_plain

    - match: '(?i)^\s*\b{{kw_control_DATAFORM}}\b'
      scope: keyword.control.printdata.data.form.erabasic
      push: line_func_form_string

    - match: '(?i)^\s*\b{{kw_control_DATALIST}}\b'
      scope: keyword.control.printdata.datalist.erabasic

    - match: '(?i)^\s*\b{{kw_control_DEBUGPRINT}}\b'
      scope: keyword.control.debugprint.erabasic
      push: line_func_plain

    - match: '(?i)^\s*\b{{kw_control_DEBUGPRINTFORM}}\b'
      scope: keyword.control.debugprint.form.erabasic
      push: line_func_form_string

    - match: '(?i)^\s*\b{{kw_control_STRLEN}}\b'
      scope: keyword.control.strlen.erabasic
      push: line_func_plain

    - match: '(?i)^\s*\b{{kw_control_STRLENS}}\b'
      scope: keyword.control.strlen.s.erabasic
      push: line_func_s

    - match: '(?i)^\s*\b{{kw_control_STRLENFORM}}\b'
      scope: keyword.control.strlen.form.erabasic
      push: line_func_form_string

    - match: '(?i)^\s*\b{{kw_control_SUBSTRING}}\b'
      scope: keyword.control.customdrawline.erabasic
      push: line_func_s

    - match: '(?i)^\s*\b{{kw_control_CALL}}\b'
      scope: keyword.control.flow.call.erabasic
      push: line_func_method

    - match: '(?i)^\s*\b{{kw_control_CALL_FORM}}\b'
      scope: keyword.control.flow.call.erabasic
      push: line_func_form_method

    - match: '(?i)^\s*\b{{kw_control_RETURN}}\b'
      scope: keyword.control.flow.return.erabasic

    - match: '(?i)^\s*\b{{kw_control_RETURN_FORM}}\b'
      scope: keyword.control.flow.return.erabasic
      push:
        - include: line_func_form
        - include: line_code

    - match: '(?i)^\s*\b{{kw_control_RESTART}}\b'
      scope: keyword.control.flow.restart.erabasic

    - match: '(?i)^\s*\b{{kw_control_BEGIN}}\b'
      scope: keyword.control.flow.begin.erabasic

    - match: '(?i)^\s*\b{{kw_control_SIF}}\b'
      scope: keyword.control.flow.sif.erabasic

    - match: '(?i)^\s*\b{{kw_control_IF}}\b'
      scope: keyword.control.flow.conditional.erabasic

    - match: '(?i)^\s*\b{{kw_control_SELECTCASE}}\b'
      scope: keyword.control.flow.selectcase.erabasic

    - match: '(?i)^\s*\b{{kw_control_NOSKIP}}\b'
      scope: keyword.control.flow.noskip.erabasic

    - match: '(?i)^\s*\b{{kw_control_SKIPSTART}}\b'
      scope: keyword.control.flow.skipstart.erabasic

    - match: '(?i)^\s*\b{{kw_control_CONTINUE}}\b'
      scope: keyword.control.flow.continue.erabasic

    - match: '(?i)^\s*\b{{kw_control_BREAK}}\b'
      scope: keyword.control.flow.break.erabasic

    - match: '(?i)^\s*\b{{kw_control_FOR}}\b'
      scope: keyword.control.flow.for.erabasic

    - match: '(?i)^\s*\b{{kw_control_WHILE}}\b'
      scope: keyword.control.flow.while.erabasic

    - match: '(?i)^\s*\b{{kw_control_DO}}\b'
      scope: keyword.control.flow.do.erabasic

    - match: '(?i)^\s*\b{{kw_control_REPEAT}}\b'
      scope: keyword.control.flow.repeat.erabasic

    - match: '(?i)^\s*\b{{kw_control_TRYC}}\b'
      scope: keyword.control.flow.tryc.erabasic
      push: line_func_method

    - match: '(?i)^\s*\b{{kw_control_TRYC_FORM}}\b'
      scope: keyword.control.flow.tryc.erabasic
      push: line_func_form_method

    - match: '(?i)^\s*\b{{kw_control_TRYC_ENDCATCH}}\b'
      scope: keyword.control.flow.tryc.erabasic

    - match: '(?i)^\s*\b{{kw_control_TRY_LIST}}\b'
      scope: keyword.control.flow.trylist.erabasic

    - match: '(?i)^\s*\b{{kw_control_THROW}}\b'
      scope: keyword.control.flow.throw.erabasic
      push: line_func_form_string

    - match: '(?i)^\s*\b{{kw_control_plain}}\b'
      scope: keyword.control.plain.erabasic
      push: line_func_plain

    - match: '(?i)^\s*\b{{kw_control_v}}\b'
      scope: keyword.control.v.erabasic
      push: line_func_v

    - match: '(?i)^\s*\b{{kw_control_s}}\b'
      scope: keyword.control.s.erabasic
      push: line_func_s

    - match: '(?i)^\s*\b{{kw_control_form}}\b'
      scope: keyword.control.form.erabasic
      push: line_func_form_string

    - match: '(?i)^\s*\b{{kw_builtin_control}}\b'
      scope: keyword.control.erabasic

# ---------------------------------------------
# 式中函数

  methods:
    - match: '(?={{name_normal}}\()'
      push:
        - match: '(?i)\b{{kw_builtin_control}}\b(?=\()'
          scope: meta.function-call.erabasic support.function.builtin.erabasic variable.function.erabasic
        - match: '{{name_normal}}(?=\()'
          scope: meta.function-call.erabasic variable.function.erabasic
        - include: line_method_arguments
        - include: no_match

  line_method_arguments:
    - match: '\('
      scope: punctuation.section.arguments.begin.erabasic
      push:
        - match: '\)'
          scope: punctuation.section.arguments.end.erabasic
          pop: true
        - include: line_code

# ---------------------------------------------
# 变量

  variables:

    # 通用字符变量
    - match: '(?i)^\s*(?=\b{{kw_var_string}}\b)'
      scope: variable.parameter.erabasic
      push:
        - match: '(?i)\b{{kw_var_string}}\b'
          scope: variable.parameter.erabasic
        - match: '='
          scope: keyword.operator.erabasic
          push: line_func_form_string
        - match: (?:\+|(?:'))=
          scope: keyword.operator.erabasic
        - include: line_code

    # 通用数值变量
    - match: '(?i)\b{{kw_variable}}\b'
      scope: variable.parameter.erabasic

    - include: line_variable

# ---------------------------------------------
# 符号

  separator:
    - match: ','
      scope: punctuation.separator.erabasic

    # 运算符
    # keyword.operator
    # keyword.operator.assignment
    # keyword.operator.arithmetic
    # keyword.operator.bitwise
    # keyword.operator.logical
    - match: (?:\+|-|\*|/|\%|&|\||\\|\^|<|>|=|\?|!|#|:|@|\')
      scope: keyword.operator.erabasic

# ---------------------------------------------
# 常数, 数字, 字符

  literals:

    - include: strings

    # LEFT, RIGHT, CENTER 等常数关键字
    - match: '(?i)\b{{kw_const}}\b'
      scope: constant.language.erabasic

    # 非法的escape符号写法
    # - match: '''\'''
    #   scope: invalid.illegal.lone-escape.erabasic

    # 已经escape的字符
    - match: (')({{escaped_char}})?(')
      scope: constant.character.erabasic
      captures:
        2: constant.character.escape.erabasic

    # char字符
    - match: (').(')
      scope: constant.character.erabasic

    # 非法的char字符写法
    # - match: (')[^']+(')
    #   scope: invalid.illegal.not_a_char.erabasic

    # 16进制数字
    - match: '{{hex_numeral}}'
      scope: constant.numeric.integer.hexadecimal.erabasic
      captures:
        1: punctuation.definition.numeric.hexadecimal.erabasic

    # 2进制数字
    - match: '{{binary_numeral}}'
      scope: constant.numeric.integer.binary.erabasic
      captures:
        1: punctuation.definition.numeric.binary.erabasic

    # float浮点数
    - match: '{{floating_point}}'
      captures:
        1: constant.numeric.float.decimal.erabasic
        2: storage.type.numeric.erabasic

    # 10进制数字
    - match: '{{decimal_numeral}}'
      captures:
        1: constant.numeric.integer.decimal.erabasic
        2: storage.type.numeric.erabasic

# ---------------------------------------------
# 字符串

  strings:

    # @"字符串"
    # 以 @ 作为开头
    - match: '(@)(")'
      captures:
        1: keyword.operator.erabasic
        2: punctuation.definition.string.start.erabasic
      push:
        - match: '"'
          scope: punctuation.definition.string.end.erabasic
          pop: true
        - include: line_func_form_string

    # 字符串
    # 以 " 作为开头和结尾
    - match: '"'
      scope: punctuation.definition.string.begin.erabasic
      push:
        - meta_scope: string.quoted.double.erabasic
        - match: '\\.'
          scope: constant.character.escape.erabasic
        - match: '"'
          scope: punctuation.definition.string.end.erabasic
          pop: true

# ---------------------------------------------
# 通用代码着色

  line_code:
    - include: line_comment

    - include: line_end

    - include: methods

    - include: literals

    - include: variables

    - include: separator

# ---------------------------------------------
# 由 CALL 方法所调用的函数

  line_func_method:
    - include: line_end
    - match: '(?={{name_normal}})'
      push:
        - include: line_end
        - match: '{{name_normal}}'
          scope: meta.function-call.erabasic variable.function.erabasic
        - match: '(?=,)'
          push: line_code
        - include: line_method_arguments

# ---------------------------------------------
# 其他变量

  line_variable:
    - match: '{{name_normal}}'
      scope: variable.erabasic

# ---------------------------------------------

  line_func_plain:
    - meta_scope: string.quoted.double.erabasic
    - include: line_end

  line_func_v:
    - include: line_code

  line_func_s:
    - include: line_code

  line_func_form_string:
    - include: line_func_form

    - match: '.'
      scope: string.quoted.double.erabasic

# ---------------------------------------------

  line_func_form_method:
    - include: line_func_form

    - include: line_method_arguments

    - match: '\S'
      scope: variable.function.erabasic

# ---------------------------------------------

  line_func_form:
    - include: line_end

    - match: '\\@'
      scope: keyword.operator.erabasic
      push:
        - match: '\\@'
          scope: keyword.operator.erabasic
          pop: true
        - include: line_code

    - match: '\{'
      scope: keyword.operator.erabasic
      push:
        - match: '\}'
          scope: keyword.operator.erabasic
          pop: true
        - include: line_code

    - match: '\%'
      scope: keyword.operator.erabasic
      push:
        - match: '\%'
          scope: keyword.operator.erabasic
          pop: true
        - include: line_code

    - match: '\\.'
      scope: constant.character.escape.erabasic

# ---------------------------------------------
# 行结束符出栈

  line_end:
    - match: '$'
      pop: true

  no_match:
    - match: ''
      pop: true
